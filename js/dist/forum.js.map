{"version":3,"sources":["webpack://@alterbyte/barg-init/webpack/bootstrap","webpack://@alterbyte/barg-init/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/extend']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/models/Discussion']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/app']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/Model']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/Notification']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/CommentPost']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/Button']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/DiscussionPage']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/helpers/username']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/Link']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/NotificationGrid']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/utils/PostControls']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/Post']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/PostMeta']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/Component']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@alterbyte/barg-init/external \"flarum.core.compat['common/components/Badge']\"","webpack://@alterbyte/barg-init/./src/forum/components/SelectBargInitNotification.js","webpack://@alterbyte/barg-init/./src/forum/addBargInitAction.js","webpack://@alterbyte/barg-init/./src/forum/components/SelectBargInitItem.js","webpack://@alterbyte/barg-init/./src/forum/components/AwardedBargInitNotification.js","webpack://@alterbyte/barg-init/./src/forum/components/BargInitDiscussionNotification.js","webpack://@alterbyte/barg-init/./src/forum/index.js","webpack://@alterbyte/barg-init/./src/forum/addBargInitBadge.js","webpack://@alterbyte/barg-init/./src/forum/addBargInitView.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_inheritsLoose","subClass","superClass","constructor","__proto__","flarum","core","compat","SelectBargInitNotification","icon","href","discussion","this","props","notification","subject","app","route","content","translator","trans","Notification","isThisBargInit","post","bargInitPost","id","actionLabel","isBargInit","saveDiscussion","save","bargInitPostId","bargInitUserId","session","user","relationships","bargInitUser","data","then","current","DiscussionPage","update","redraw","set","extend","PostControls","items","forum","attribute","pushAttributes","contentType","add","Button","component","onclick","CommentPost","attrs","hasBargInit","isHidden","number","canSelectBargInit","ineligible","blockSelectOwnPost","matches","className","SelectBargInitItem","view","config","data-number","time_set","getSetTime","a","bargInitSetAt","humanTime","Component","AwardedBargInitNotification","fromUser","BargInitInDiscussionNotification","initializers","Discussion","Model","hasOne","startUserId","Number","firstPostId","transformDate","notificationComponents","selectBargInit","awardedBargInit","BargInitInDiscussion","BargInitDiscussionNotification","has","Badge","type","label","addBargInitAction","thisPost","bidPostValueIsNotNull","bidPost","userOnline","username","PostMeta","Class","class","readonly","trust","contentHtml","PostComponent","NotificationGrid"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/Notification'];","module.exports = flarum.core.compat['common/components/CommentPost'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/DiscussionPage'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/components/NotificationGrid'];","module.exports = flarum.core.compat['common/utils/PostControls'];","module.exports = flarum.core.compat['common/components/Post'];","module.exports = flarum.core.compat['common/components/PostMeta'];","module.exports = flarum.core.compat['common/helpers/userOnline'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/components/Badge'];","import Notification from 'flarum/common/components/Notification';\r\n\r\nexport default class SelectBargInitNotification extends Notification {\r\n    icon() {\r\n        return 'fas fa-comment-dots';\r\n    }\r\n\r\n    href() {\r\n        const notification = this.props.notification;\r\n        const discussion = notification.subject();\r\n\r\n        return app.route.discussion(discussion);\r\n    }\r\n\r\n    content() {\r\n        return app.translator.trans('barg-init.forum.notification.content');\r\n    }\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport Button from 'flarum/common/components/Button';\r\nimport PostControls from 'flarum/common/utils/PostControls';\r\nimport DiscussionPage from 'flarum/common/components/DiscussionPage';\r\nimport CommentPost from 'flarum/common/components/CommentPost';\r\n\r\nexport default () => {\r\n    const ineligible = (discussion, post) => {\r\n        return post.isHidden() || post.attribute('alterbyteBidding') === null || post.number() === 1 || !discussion.canSelectBargInit() || !app.session.user\r\n    };\r\n\r\n    const blockSelectOwnPost = (post) => {\r\n        return !app.forum.attribute('canSelectBargInitOwnPost') && post.user() && post.user().id() === app.session.user.id();\r\n    };\r\n\r\n    const isThisBargInit = (discussion, post) => {\r\n        return discussion.bargInitPost() && discussion.bargInitPost().id() === post.id();\r\n    };\r\n\r\n    const actionLabel = (isBargInit) => {\r\n        return app.translator.trans(isBargInit ? 'barg-init.forum.remove_barg_init' : 'barg-init.forum.this_barg_init');\r\n    };\r\n\r\n    const saveDiscussion = (discussion, isBargInit, post) => {\r\n        discussion\r\n            .save({\r\n                bargInitPostId: isBargInit ? post.id() : 0,\r\n                bargInitUserId: app.session.user.id(),\r\n                relationships: isBargInit\r\n                    ? { bargInitPost: post, bargInitUser: app.session.user }\r\n                    : delete discussion.data.relationships.bargInitPost,\r\n            })\r\n            .then(() => {\r\n                if (app.current instanceof DiscussionPage) {\r\n                    app.current.get('stream').update();\r\n                }\r\n\r\n                m.redraw();\r\n\r\n                if (isBargInit) {\r\n                    m.route.set(app.route.discussion(discussion));\r\n                }\r\n            });\r\n    };\r\n\r\n    extend(PostControls, 'moderationControls', function (items, post) {\r\n        if (app.forum.attribute('useAlternativeBargInitUi')) return;\r\n\r\n        const discussion = post.discussion();\r\n        let isBargInit = isThisBargInit(discussion, post);\r\n\r\n        post.pushAttributes({ isBargInit });\r\n\r\n        if (post.contentType() !== 'comment') return;\r\n\r\n        //if (ineligible(discussion, post) || blockSelectOwnPost(post) || !app.current.matches(DiscussionPage)) return;\r\n\r\n        items.add(\r\n            'bargInit-dle',\r\n            Button.component({ \r\n                icon: `fa${isBargInit ? 's' : 'r'} fa-comment-dots`,\r\n                onclick: () => {\r\n                    isBargInit = !isBargInit;\r\n\r\n                    saveDiscussion(discussion, isBargInit, post);\r\n                },\r\n            },\r\n            actionLabel(isBargInit)\r\n            )\r\n        );\r\n    });\r\n\r\n    extend(CommentPost.prototype, 'actionItems', function (items) {\r\n        if (!app.forum.attribute('useAlternativeBargInitUi')) return;\r\n\r\n        const post = this.attrs.post;\r\n        const discussion = this.attrs.post.discussion();\r\n        let isBargInit = isThisBargInit(discussion, post);\r\n        let hasBargInit = discussion.bargInitPost() !== false;\r\n\r\n        post.pushAttributes({ isBargInit });\r\n\r\n        if (ineligible(discussion, post) || blockSelectOwnPost(post) || !app.current.matches(DiscussionPage)) return;\r\n\r\n        items.add(\r\n            'bargInit',\r\n            Button.component({\r\n                className: !hasBargInit ? 'Button Button--primary' : isBargInit ? 'Button Button--primary' : 'Button Button--link',\r\n                onclick: function onclick() {\r\n                    hasBargInit = !hasBargInit;\r\n                    isBargInit = !isBargInit;\r\n\r\n                    saveDiscussion(discussion, isBargInit, post);\r\n                },\r\n            },\r\n            actionLabel(isBargInit)\r\n            )\r\n        );\r\n    });\r\n};\r\n","import Component from 'flarum/common/Component';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport Link from 'flarum/common/components/Link';\r\n\r\nexport default class SelectBargInitItem extends Component {\r\n    view() {\r\n        const { post, discussion } = this.attrs;\r\n\r\n        return (\r\n            <div className=\"Post--BargInit\">\r\n                {post ? (\r\n                    <span>\r\n                        {icon('fas fa-check')}\r\n                        {app.translator.trans('barg-init.forum.sale_button')}\r\n                    </span>\r\n                ) : (\r\n                    <a href={app.route.post(post)} config={m.route} data-number={post.number()}>\r\n                        {icon('fas fa-check')}\r\n                        {app.translator.trans('barg-init.forum.sale_button')}\r\n                    </a>\r\n                )}\r\n\r\n                <span className=\"BargInit--User\">\r\n                    {app.translator.trans('barg-init.forum.sale_label', {\r\n                        user: discussion.bargInitUser(),\r\n                        time_set: this.getSetTime(discussion),\r\n                        a: <a onclick={() => m.route(app.route.user(discussion.bargInitUser()))} />,\r\n                    })}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSetTime(discussion) {\r\n        if (discussion.bargInitSetAt() === null) {\r\n            return;\r\n        }\r\n        return humanTime(discussion.bargInitSetAt());\r\n    }\r\n}\r\n","import Notification from 'flarum/common/components/Notification';\r\n\r\nexport default class AwardedBargInitNotification extends Notification {\r\n    icon() {\r\n        return 'fas fa-check';\r\n    }\r\n\r\n    href() {\r\n        const notification = this.props.notification;\r\n        const discussion = notification.subject();\r\n\r\n        return app.route.discussion(discussion);\r\n    }\r\n\r\n    content() {\r\n        const user = this.props.notification.fromUser();\r\n        return app.translator.trans('barg-init.forum.notification.awarded', {\r\n            user: user,\r\n        });\r\n    }\r\n}\r\n","import Notification from 'flarum/common/components/Notification';\r\n\r\nexport default class BargInitInDiscussionNotification extends Notification {\r\n    icon() {\r\n        return 'fas fa-check';\r\n    }\r\n\r\n    href() {\r\n        const notification = this.props.notification;\r\n        const discussion = notification.subject();\r\n\r\n        return app.route.discussion(discussion);\r\n    }\r\n\r\n    content() {\r\n        const user = this.props.notification.fromUser();\r\n        return app.translator.trans('barg-init.forum.notification.barg_init_in_discussion', {\r\n            user: user,\r\n        });\r\n    }\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport app from 'flarum/common/app';\r\nimport Discussion from 'flarum/common/models/Discussion';\r\nimport Model from 'flarum/common/Model';\r\nimport NotificationGrid from 'flarum/common/components/NotificationGrid';\r\n\r\nimport SelectBargInitNotification from './components/SelectBargInitNotification';\r\nimport addBargInitAction from './addBargInitAction';\r\nimport addBargInitView from './addBargInitView';\r\nimport addBargInitBadge from './addBargInitBadge';\r\nimport AwardedBargInitNotification from './components/AwardedBargInitNotification';\r\nimport BargInitDiscussionNotification from './components/BargInitDiscussionNotification';\r\n\r\napp.initializers.add('alterbyte/barg-init', () => {\r\n    Discussion.prototype.bargInitPost = Model.hasOne('bargInitPost');\r\n    Discussion.prototype.bargInitUser = Model.hasOne('bargInitUser');\r\n    Discussion.prototype.hasBargInit = Model.attribute('hasBargInit');\r\n    Discussion.prototype.startUserId = Model.attribute('startUserId', Number);\r\n    Discussion.prototype.firstPostId = Model.attribute('firstPostId', Number);\r\n    Discussion.prototype.canSelectBargInit = Model.attribute('canSelectBargInit');\r\n    Discussion.prototype.bargInitSetAt = Model.attribute('bargInitSetAt', Model.transformDate);\r\n\r\n    app.notificationComponents.selectBargInit = SelectBargInitNotification;\r\n    app.notificationComponents.awardedBargInit = AwardedBargInitNotification;\r\n    app.notificationComponents.BargInitInDiscussion = BargInitDiscussionNotification;\r\n\r\n    addBargInitBadge();\r\n    addBargInitAction();\r\n    addBargInitView();\r\n\r\n    extend(NotificationGrid.prototype, 'notificationTypes', function(items) {\r\n        items.add('awardedBargInit', {\r\n            name: 'awardedBargInit',\r\n            icon: 'fas fa-check',\r\n            label: app.translator.trans('barg-init.forum.notification.preferences.awarded_barg_init'),\r\n        });\r\n        items.add('BargInitInDiscussion', {\r\n            name: 'BargInitInDiscussion',\r\n            icon: 'fas fa-check',\r\n            label: app.translator.trans('barg-init.forum.notification.preferences.barg_init_in_discussion'),\r\n        });\r\n    });\r\n});","import app from 'flarum/common/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport Badge from 'flarum/common/components/Badge';\r\nimport Discussion from 'flarum/common/models/Discussion';\r\n\r\n//adding badge on Discussion Hero / and on discussion list\r\nexport default function() {\r\n    extend(Discussion.prototype, 'badges', function(items) {\r\n        if (this.hasBargInit() && !items.has('hidden')) {\r\n            items.add(\r\n                'barg-init-badge',\r\n                Badge.component({\r\n                    type: 'bargInit',\r\n                    icon: 'fas fa-check',\r\n                    label: app.translator.trans('barg-init.forum.sold_badge'),\r\n                })\r\n            );\r\n        }\r\n    });\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport CommentPost from 'flarum/common/components/CommentPost';\r\nimport PostComponent from 'flarum/common/components/Post';\r\nimport PostMeta from 'flarum/common/components/PostMeta';\r\nimport username from 'flarum/common/helpers/username';\r\nimport userOnline from 'flarum/common/helpers/userOnline';\r\nimport Link from 'flarum/common/components/Link';\r\n\r\nimport SelectBargInitItem from './components/SelectBargInitItem';\r\n\r\nexport default () => {\r\n    extend(CommentPost.prototype, 'headerItems', function(items) {\r\n        const post = this.attrs.post;\r\n        //const bidPost = post.attribute('alterbyteBidding');\r\n\r\n        if (\r\n            post.discussion().bargInitPost() && \r\n            post\r\n                .discussion()\r\n                .bargInitPost()\r\n                .id() === post.id() &&\r\n            !post.isHidden()\r\n        ) {\r\n            items.add(\r\n                'isBargInit',\r\n                SelectBargInitItem.component({\r\n                    post,\r\n                    discussion: post.discussion(),\r\n                })\r\n            );\r\n        }\r\n    });\r\n\r\n    extend(CommentPost.prototype, 'footerItems', function(items) {\r\n        const thisPost = this.attrs.post;\r\n        const discussion = thisPost.discussion();\r\n        const post = discussion.bargInitPost();\r\n        const bidPostValueIsNotNull = this.attrs.post.attribute('alterbyteBidding') !== null;\r\n\r\n        if (post && bidPostValueIsNotNull && !post.isHidden() && thisPost.number() === 1 && !thisPost.isHidden()) {\r\n            const user = post.user();\r\n            const bidPost = post.attribute('alterbyteBidding') + \" ر.س\";\r\n            const approved = true;\r\n            const isItapproved = approved === true ? 'approved' : 'NotApproved';\r\n\r\n            items.add(\r\n                `bargInitPost ${isItapproved}`,\r\n                \r\n                <div className=\"CommentPost\">\r\n                    <div className=\"Post-header\">\r\n                        <ul>\r\n                            <li className=\"item-user\">\r\n                                <div className=\"PostUser\">\r\n                                    {user && userOnline(user)}\r\n                                    <h3>\r\n                                        {user ? (\r\n                                            <a href={app.route.user(user)} config={m.route}>\r\n                                                {username(user)}\r\n                                            </a>\r\n                                        ) : (\r\n                                            username(user)\r\n                                        )}\r\n                                    </h3>\r\n                                </div>\r\n                            </li>\r\n                            {post.discussion() && <li className=\"item-meta\">{PostMeta.component({ post })}</li>}\r\n                            {SelectBargInitItem.component({\r\n                                post,\r\n                                discussion,\r\n                            })}\r\n                        </ul>\r\n                        <div Class=\"item-bid\">\r\n                            <input class=\"bidValue\" type=\"text\" name=\"CommentBid\" value={bidPost} readonly></input>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"Post-body\">{m.trust(post.contentHtml())}\r\n                    </div>\r\n                    <div className=\"barg-footer\">\r\n                    <li className=\"item-confirm\">\r\n                        <button type=\"button\">Confirm</button>\r\n                        </li>\r\n                    <li className=\"item-cancel\">\r\n                        <button type=\"button\">Cancel</button>\r\n                        </li>\r\n                    </div>\r\n                </div>,\r\n                -10\r\n            );\r\n        }\r\n    });\r\n\r\n    extend(PostComponent.prototype, 'attrs', function(attrs) {\r\n        const post = this.attrs.post;\r\n\r\n        if (\r\n            post.discussion().bargInitPost() &&\r\n            post\r\n                .discussion()\r\n                .bargInitPost()\r\n                .id() === post.id() &&\r\n            !post.isHidden()\r\n        ) {\r\n            attrs.className += ' Post--bargInit';\r\n        }\r\n    });\r\n};\r\n"],"sourceRoot":""}